{"version":3,"sources":["App.tsx","config/i18n.ts","index.tsx"],"names":["ChooseLanguage","useTranslation","t","i18n","htmlFor","id","value","language","onChange","event","changeLanguage","target","App","pageTranslate","title","console","log","use","Backend","LanguageDetector","initReactI18next","init","backend","loadPath","process","fallbackLng","debug","interpolation","escapeValue","ReactDOM","render","StrictMode","fallback","document","getElementById"],"mappings":"0KAGA,SAASA,IAAkB,IAAD,EACJC,cAAZC,EADgB,EAChBA,EAAGC,EADa,EACbA,KAMX,OACE,gCACE,uBAAOC,QAAQ,kBAAf,SAAkCF,EAAE,iBAEpC,yBACEG,GAAG,kBACHC,MAAOH,EAAKI,SACZC,SAXN,SAA0BC,GACxBN,EAAKO,eAAeD,EAAME,OAAOL,QAO/B,UAKE,wBAAQA,MAAM,QAAd,SAAuBJ,EAAE,kBAEzB,wBAAQI,MAAM,KAAd,SAAoBJ,EAAE,wBAqBfU,MAff,WAAgB,IACNV,EAAMD,cAANC,EACGW,EAAkBZ,YAAe,aAApCC,EAER,OACE,gCACE,6BAAKA,EAAE,aAAc,CAAEY,MAAO,iBAE9B,6BAAKD,EAAc,WAEnB,cAACb,EAAD,Q,8BC/BNe,QAAQC,MAERb,IACGc,IAAIC,KACJD,IAAIE,KACJF,IAAIG,KACJC,KAAK,CACJC,QAAS,CACPC,SAAUC,+CAEZC,YAAa,KACbC,OAAO,EACPC,cAAe,CACbC,aAAa,KCdnBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,WAAD,CAAUC,SAAU,sCAApB,SACE,cAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.63b41507.chunk.js","sourcesContent":["import { ChangeEvent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nfunction ChooseLanguage() {\n  const { t, i18n } = useTranslation();\n\n  function handleChangeLang(event: ChangeEvent<HTMLSelectElement>) {\n    i18n.changeLanguage(event.target.value);\n  }\n\n  return (\n    <div>\n      <label htmlFor=\"choose-language\">{t(\"labels.lang\")}</label>\n\n      <select\n        id=\"choose-language\"\n        value={i18n.language}\n        onChange={handleChangeLang}\n      >\n        <option value=\"pt-BR\">{t(\"languages.pt\")}</option>\n\n        <option value=\"en\">{t(\"languages.en\")}</option>\n      </select>\n    </div>\n  );\n}\n\nfunction App() {\n  const { t } = useTranslation();\n  const { t: pageTranslate } = useTranslation(\"pages/app\");\n\n  return (\n    <div>\n      <h1>{t(\"titles.app\", { title: \"React i18n\" })}</h1>\n\n      <h2>{pageTranslate(\"title\")}</h2>\n\n      <ChooseLanguage />\n    </div>\n  );\n}\n\nexport default App;\n","import i18n from \"i18next\";\nimport Backend from \"i18next-http-backend\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport { initReactI18next } from \"react-i18next\";\n\n// console.log(window.ENV);\nconsole.log();\n\ni18n\n  .use(Backend)\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    backend: {\n      loadPath: process.env.PUBLIC_URL + \"/locales/{{lng}}/{{ns}}.json\",\n    },\n    fallbackLng: \"en\",\n    debug: true,\n    interpolation: {\n      escapeValue: false,\n    },\n  });\n\nexport { i18n };\n","import React, { Suspense } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./config/i18n\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Suspense fallback={<div>...</div>}>\n      <App />\n    </Suspense>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}